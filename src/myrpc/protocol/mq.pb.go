// Code generated by protoc-gen-go.
// source: mq.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	mq.proto

It has these top-level messages:
	Null
	HelloWorldRequest
	HelloWorldReply
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Null struct {
}

func (m *Null) Reset()                    { *m = Null{} }
func (m *Null) String() string            { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()               {}
func (*Null) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HelloWorldRequest struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *HelloWorldRequest) Reset()                    { *m = HelloWorldRequest{} }
func (m *HelloWorldRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloWorldRequest) ProtoMessage()               {}
func (*HelloWorldRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloWorldRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type HelloWorldReply struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *HelloWorldReply) Reset()                    { *m = HelloWorldReply{} }
func (m *HelloWorldReply) String() string            { return proto.CompactTextString(m) }
func (*HelloWorldReply) ProtoMessage()               {}
func (*HelloWorldReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HelloWorldReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Null)(nil), "protocol.Null")
	proto.RegisterType((*HelloWorldRequest)(nil), "protocol.HelloWorldRequest")
	proto.RegisterType((*HelloWorldReply)(nil), "protocol.HelloWorldReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MQService service

type MQServiceClient interface {
	HelloWorld(ctx context.Context, in *HelloWorldRequest, opts ...grpc.CallOption) (*HelloWorldReply, error)
}

type mQServiceClient struct {
	cc *grpc.ClientConn
}

func NewMQServiceClient(cc *grpc.ClientConn) MQServiceClient {
	return &mQServiceClient{cc}
}

func (c *mQServiceClient) HelloWorld(ctx context.Context, in *HelloWorldRequest, opts ...grpc.CallOption) (*HelloWorldReply, error) {
	out := new(HelloWorldReply)
	err := grpc.Invoke(ctx, "/protocol.MQService/HelloWorld", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MQService service

type MQServiceServer interface {
	HelloWorld(context.Context, *HelloWorldRequest) (*HelloWorldReply, error)
}

func RegisterMQServiceServer(s *grpc.Server, srv MQServiceServer) {
	s.RegisterService(&_MQService_serviceDesc, srv)
}

func _MQService_HelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MQServiceServer).HelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.MQService/HelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MQServiceServer).HelloWorld(ctx, req.(*HelloWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MQService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.MQService",
	HandlerType: (*MQServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloWorld",
			Handler:    _MQService_HelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mq.proto",
}

func init() { proto.RegisterFile("mq.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0x2d, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x4a, 0x6c, 0x5c, 0x2c, 0x7e,
	0xa5, 0x39, 0x39, 0x4a, 0xea, 0x5c, 0x82, 0x1e, 0xa9, 0x39, 0x39, 0xf9, 0xe1, 0xf9, 0x45, 0x39,
	0x29, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x29, 0x89, 0x25, 0x89,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x2a, 0x17, 0x3f, 0xb2, 0xc2, 0x82,
	0x9c, 0x4a, 0x6c, 0xca, 0x8c, 0x82, 0xb9, 0x38, 0x7d, 0x03, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93,
	0x53, 0x85, 0xdc, 0xb8, 0xb8, 0x10, 0x7a, 0x84, 0xa4, 0xf5, 0x60, 0xb6, 0xeb, 0x61, 0x58, 0x29,
	0x25, 0x89, 0x5d, 0xb2, 0x20, 0xa7, 0x52, 0x89, 0x21, 0x89, 0x0d, 0x2c, 0x67, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x88, 0xc5, 0xc2, 0x3b, 0xc9, 0x00, 0x00, 0x00,
}
